// Code generated by wunderctl. DO NOT EDIT.

import type function_ParkingMutationsFinishParking from "../../.wundergraph/operations/parking/mutations/FinishParking";
import type function_ParkingMutationsStartParking from "../../.wundergraph/operations/parking/mutations/StartParking";
import type { ExtractInput, ExtractResponse } from "@wundergraph/sdk/operations";
import type { OperationErrors } from "./ts-operation-errors";

export type JSONValue = string | number | boolean | JSONObject | Array<JSONValue>;

export type JSONObject = { [key: string]: JSONValue };
import type { GraphQLError } from "@wundergraph/sdk/client";

export type ParkingMutationsFinishParkingInput = ExtractInput<typeof function_ParkingMutationsFinishParking>;

export type ParkingMutationsStartParkingInput = ExtractInput<typeof function_ParkingMutationsStartParking>;

export interface InternalParkingMutationsFinishParkingInput {
	parkingTransactionId: string;
}

export interface InternalParkingMutationsStartParkingInput {
	vehicleCode: string;
	entranceCode: string;
}

export interface ParkingQueriesEntrancesResponse {
	data?: ParkingQueriesEntrancesResponseData;
	errors?: GraphQLError[];
}

export interface ParkingQueriesParkingRatesAndRelationsResponse {
	data?: ParkingQueriesParkingRatesAndRelationsResponseData;
	errors?: GraphQLError[];
}

export interface ParkingQueriesParkingTransactionsAndRelationsResponse {
	data?: ParkingQueriesParkingTransactionsAndRelationsResponseData;
	errors?: GraphQLError[];
}

export interface ParkingQueriesVehicleTypesResponse {
	data?: ParkingQueriesVehicleTypesResponseData;
	errors?: GraphQLError[];
}

export interface ParkingMutationsFinishParkingResponse {
	data?: ParkingMutationsFinishParkingResponseData;
	errors?: GraphQLError[];
}

export interface ParkingMutationsStartParkingResponse {
	data?: ParkingMutationsStartParkingResponseData;
	errors?: GraphQLError[];
}

export interface ParkingQueriesEntrancesResponseData {
	pgdb_findManyentrances: {
		id: number;
		code: string;
		name?: string;
	}[];
}

export interface ParkingQueriesParkingRatesAndRelationsResponseData {
	pgdb_findManyparking_rates: {
		id: number;
		created_at?: string;
		min_hours?: number;
		min_amount?: number;
		variable_amount?: number;
		is_active: boolean;
		vehicle_types?: {
			id: number;
			code?: string;
			description?: string;
		};
	}[];
}

export interface ParkingQueriesParkingTransactionsAndRelationsResponseData {
	pgdb_findManyparking_transactions: {
		id: number;
		created_at: string;
		vehicle_plate: string;
		datetime_in: string;
		datetime_out?: string;
		amount?: number;
		parking_rates: {
			min_hours?: number;
			min_amount?: number;
			variable_amount?: number;
		};
		entrances: {
			code: string;
			name?: string;
		};
	}[];
}

export interface ParkingQueriesVehicleTypesResponseData {
	pgdb_findManyvehicle_types: {
		id: number;
		code?: string;
		description?: string;
	}[];
}

export type ParkingMutationsFinishParkingResponseData = ExtractResponse<typeof function_ParkingMutationsFinishParking>;

export type ParkingMutationsStartParkingResponseData = ExtractResponse<typeof function_ParkingMutationsStartParking>;
