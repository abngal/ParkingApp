generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model parking_rates {
  id                   Int                    @id @default(autoincrement())
  created_at           DateTime?              @default(now()) @db.Timestamptz(6)
  min_hours            Int?                   @db.SmallInt
  min_amount           Int?                   @db.SmallInt
  variable_amount      Int?                   @db.SmallInt
  is_active            Boolean                @default(false)
  vehicle_type         Int?
  vehicle_types        vehicle_types?         @relation(fields: [vehicle_type], references: [id], onDelete: NoAction, onUpdate: NoAction)
  parking_transactions parking_transactions[]
}

model parking_transactions {
  id            Int           @id @default(autoincrement())
  created_at    DateTime      @default(now()) @db.Timestamptz(6)
  vehicle_plate String        @unique @default("255") @db.VarChar
  datetime_in   DateTime      @default(now()) @db.Timestamp(6)
  datetime_out  DateTime?     @db.Timestamp(6)
  amount        Int?          @default(0) @db.SmallInt
  parking_rate  Int
  parking_rates parking_rates @relation(fields: [parking_rate], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model vehicle_types {
  id            Int             @id @default(autoincrement())
  created_at    DateTime?       @default(now()) @db.Timestamptz(6)
  code          String?         @default("2") @db.VarChar
  description   String?
  parking_rates parking_rates[]
}
